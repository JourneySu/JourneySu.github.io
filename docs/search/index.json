[{"categories":null,"content":"嗨！大家好，我是Hailey，歡迎來到我的部落格！\n我是個軟體工程師，喜歡不斷學習新知識，並追求技術的進步。\n這個部落格是我的學習筆記，記錄我在軟體開發和生活中的點滴收穫。\n.\n我喜歡與大自然親近，爬山和養植物是我的嗜好，\n健身也是我日常生活的一部分，最近也嘗試攀岩(抱石)，給自己一點小挑戰，\n除了技術能力要定時充電，身體和心靈也是需定時補充能量，是吧😆\n.\n期待在這裡與大家分享我的學習心得和生活趣事，並與各位一起交流、成長！\n.\n","permalink":"http://localhost:1313/about/","tags":null,"title":"About Me"},{"categories":["演算法","資料結構"],"content":"[TOC]\n演算法是什麼 {待補}\nChatgpt提供的學習計劃 第一階段：建立基礎 基本概念 學習演算法和資料結構的基本概念，例如陣列、鏈表、堆疊、佇列等。 時間複雜度和空間複雜度 理解演算法的時間複雜度和空間複雜度，並學習如何評估演算法的效能。 排序演算法 學習常見的排序演算法，如冒泡排序、插入排序、選擇排序、快速排序、合併排序等。 搜尋演算法 瞭解搜尋演算法，包括線性搜尋和二分搜尋。 第二階段：擴展知識 圖論 學習圖論相關的基本概念，如圖、路徑、迴路、最短路徑等，以及常見的圖論演算法，如深度優先搜索（DFS）和廣度優先搜索（BFS）。 動態規劃 瞭解動態規劃的基本原理和應用場景，並學習如何設計動態規劃演算法解決問題。 貪婪演算法 學習貪婪演算法的基本原理和常見應用，以及貪婪演算法與動態規劃的區別和適用場景。 第三階段：實際應用 演算法問題練習\n解決各種演算法問題，可以通過線上資源如 LeetCode、HackerRank、Codewars 等網站來進行練習。 專案應用\n在你的 ASP.NET Core 專案中實際應用所學的演算法知識，優化程式碼效能，處理複雜的邏輯問題。 演算法介紹 Two Pointer 其他待整理key word 資料結構 電腦區分兩種方法： 大塊：Array 小塊：Linked List 連結數量 一個連一個\u0026mdash;\u0026gt;Linked List(鏈結串列) 一個連兩個\u0026mdash;\u0026gt;Binary tree(二元樹) 一個連多個\u0026mdash;\u0026gt;B-Tree 或 B+ Tree(多元樹) 存放位置 通常存放在記憶體：Linked List、Binary tree 通常存放在硬碟：B-Tree Hash Table(雜湊表)：\n混合大塊和小塊的結構，也就是rray當大容器，每一格當中都可以放一個Linked List。至於每個東西要放哪一格，就是由雜湊函數來決定！ 演算法 排序 + 二分搜尋法：用來加快Arry的搜尋速度 雜湊函數(不確定是否歸類在演算法) 按方法分類 先讀書培養與鍛鍊程式設計的邏輯腦-程式設計大賫的解題策略基礎入門再補上一些以下方法，就差不多夠了。\n遞增法 Incremental Method 記憶法 Memoization 枚舉法 Enumerative Method 遞推法 Iterative Method 遞歸法 Recrusive Method 分治法 Divide and Conquer 動態規劃 Dynamic Programming 貪心法 Greedy Method 縮放法 Scaling Method 套用模型 Modeling ","permalink":"http://localhost:1313/posts/algorithm-note/","tags":["演算法","資料結構"],"title":"資料結構及演算法學習筆記"},{"categories":["CDN","Backend"],"content":"#這裡是目錄\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\n#內容開始\n","permalink":"http://localhost:1313/posts/my-first-post/","tags":["newPost","css","html","tag1"],"title":"First Test"}]